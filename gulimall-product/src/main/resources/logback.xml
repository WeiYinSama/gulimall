<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <!-- 日志级别：
                   ERROR
                   WARN
                   INFO
                   DEBUG
                   TRACE -->


    <property name="LOG_HOME" value="logs"/>
    <property name="PROJECT_NAME" value="gulimall"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 格式化输出：
                        %d{yyyy-MM-dd HH:mm:ss}: 日期
                        %-5level：级别从左显示5个字符宽度
                        %thread: 线程名
                        %c: 类名
                        %M: 方法名
                        %-3L: 行号
                        %msg: 日志消息
                        %n: 换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %c Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名-->
            <FileNamePattern>${LOG_HOME}/${PROJECT_NAME}_%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度, %msg：日志消息, %n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %c Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!--文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- DruidFILE 专门记录 slow sql -->
    <appender name="DruidFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名，保存着最新的日志 -->
        <file>${LOG_HOME}/${PROJECT_NAME}_druid_slow_sql.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}_druid_slow_sql-%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <!-- 除按日志记录之外，还配置了日志文件不能超过20MB，
            若超过20MB，日志文件会以索引0开始，命名日志文件，例如log-error-2013-12-21.0.log -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %c Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 此日志文件只记录级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!-- 日志输出级别 -->
    <logger name="net.avalon.gulimall.product" level="INFO"/>
    <logger name="net.avalon.gulimall.product.controller" level="DEBUG"/>
    <logger name="net.avalon.gulimall.product.service" level="DEBUG"/>
    <logger name="net.avalon.gulimall.product.dao" level="DEBUG"/>
    <!-- mapper层 日志级别：DEBUG: 展示SQL，默认INFO -->
    <logger name="net.avalon.gulimall.product.mapper" level="DEBUG"/>
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="DruidFILE"/>
    </root>
</configuration>